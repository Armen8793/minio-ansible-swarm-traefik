version: '3.7'

x-common-traefik-labels: &traefik_labels
  traefik.enable: 'true'
  traefik.http.routers.minio.tls: 'true'
  traefik.http.routers.minio.entrypoints: websecure
  traefik.http.routers.minio.service: minio
  traefik.http.routers.minio.rule: Host(`minio fqdn here`)
  traefik.http.services.minio.loadbalancer.server.port: 9001
  traefik.http.routers.minio.middlewares: http-to-https@file,compress-response@file

x-minio-service: &minio
  image: quay.io/minio/minio:RELEASE.2022-12-12T19-27-27Z
  networks: &networks
    traefik_endpoint:
    internal:
      aliases:
        - minio
    #minio_endpoint:
     # aliases:
      #  - minio
  volumes:
    - minio_data:/export
  command: server --console-address ":9001" http://minio-0{1...3}/data{1...2}
  secrets:
    - secret_key
    - access_key
  deploy: &deploy
    restart_policy:
      condition: any
      delay: 10s
      max_attempts: 3
    update_config:
      parallelism: 1
      delay: 10s
    labels:
      <<: *traefik_labels
  healthcheck:
      test: ["CMD", "curl", "-s", "-o", "/dev/null", "-w", "from %{url_effective} response %{http_code} in %{time_total}s", "http://localhost:9000/minio/health/live"]
      retries: 3
      interval: 5s
      timeout: 2s
      start_period: 5s

services:
  minio-01:
    <<: *minio
    hostname: minio-01
    ports:
      #- "9000:9000"
    - mode: ingress
      target: 9000
      published: 9000
      protocol: tcp
    - mode: ingress
      target: 9001
      published: 9001
      protocol: tcp
    networks:
      <<: *networks
      internal:
        aliases:
          - minio-01
          - minio
    volumes:
      - minio-01_data1-1:/data1
      - minio-01_data1-2:/data2
    deploy:
      <<: *deploy
      #labels:
      #  traefik.enable: 'false'
      placement:
        constraints:
          - node.labels.minio.replica == 1

  minio-02:
    <<: *minio
    hostname: minio-02
    networks:
      <<: *networks
      internal:
        aliases:
          - minio-02
          - minio
    volumes:
      - minio-02_data2-1:/data1
      - minio-02_data2-2:/data2
    deploy:
      <<: *deploy
      placement:
        constraints:
          - node.labels.minio.replica == 2

  minio-03:
    <<: *minio
    hostname: minio-03
    networks:
      <<: *networks
      internal:
        aliases:
          - minio-03
          - minio
    volumes:
      - minio-03_data3-1:/data1
      - minio-03_data3-2:/data2
    deploy:
      <<: *deploy
      placement:
        constraints:
          - node.labels.minio.replica == 3

  adm_mc_exch:
    image: minio/mc:latest
    networks:
      internal:
    volumes:
      - gb_adm_mc_exch:/exchange
    working_dir: /exchange
    entrypoint:
      - 'sh'
      - '-c'
      - 'mc config host add abb-minio http://minio-02:9000 $$(cat /var/run/secrets/access_key) $$(cat /var/run/secrets/secret_key) && mc mirror -w --overwrite . abb-minio/test1/'
    secrets:
      - secret_key
      - access_key
    deploy:
      placement:
        constraints:
          - node.labels.minio.admin == true

volumes:
  minio-01_data1-1:
  minio-01_data1-2:
  minio-02_data2-1:
  minio-02_data2-2:
  minio-03_data3-1:
  minio-03_data3-2:
  gb_adm_mc_exch:
    external: true

networks:
  internal:
    internal: true
  traefik_endpoint:
    external: true
  #minio_endpoint:
   # external: true

secrets:
  secret_key:
    external: true
  access_key:
    external: true
